  [1m[36m (3.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.3ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20150205224742)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (5.2ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "email" character varying, "password_digest" character varying, "pic_url" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224742"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
Migrating to CreateQuestions (20150205224756)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (2.9ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "prompt" text, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224756"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateAnswers (20150205224801)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "content" text, "question_id" integer, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224801"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20150205224805)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (3.7ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "votable_id" integer, "user_id" integer, "votable_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224805"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateComments (20150205224809)
  [1m[35m (0.3ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "comments" ("id" serial primary key, "content" text, "commentable_id" integer, "commentable_type" character varying, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224809"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.8ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'comments'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.6ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.6ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.6ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "users" ("name", "email", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["name", "Tommy"], ["email", "d@d.com"], ["password_digest", "$2a$10$k3TiL4on.b0WQKbFqpYx8eoDXgvieZhPREdlSLJKb9Eubkiv8a0G2"], ["created_at", "2015-02-05 23:28:59.732409"], ["updated_at", "2015-02-05 23:28:59.732409"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "questions" ("prompt", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["prompt", "om"], ["created_at", "2015-02-05 23:30:24.509192"], ["updated_at", "2015-02-05 23:30:24.509192"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "answers" ("content", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"  [["content", "om"], ["created_at", "2015-02-05 23:30:58.295417"], ["updated_at", "2015-02-05 23:30:58.295417"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mVote Load (0.4ms)[0m  SELECT "votes".* FROM "votes" WHERE "votes"."votable_id" = $1 AND "votes"."votable_type" = $2  [["votable_id", 1], ["votable_type", "Answer"]]
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "votes" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"  [["created_at", "2015-02-05 23:31:53.265372"], ["updated_at", "2015-02-05 23:31:53.265372"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.3ms)[0m  [1mUPDATE "votes" SET "votable_id" = $1, "votable_type" = $2, "updated_at" = $3 WHERE "votes"."id" = $4[0m  [["votable_id", 1], ["votable_type", "Answer"], ["updated_at", "2015-02-05 23:31:53.269199"], ["id", 1]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36mVote Load (0.7ms)[0m  [1mSELECT "votes".* FROM "votes"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "votes" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"[0m  [["created_at", "2015-02-05 23:32:44.074108"], ["updated_at", "2015-02-05 23:32:44.074108"]]
  [1m[35m (1.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
PG::UndefinedColumn: ERROR:  column votes.voteable_id does not exist
LINE 1: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = ...
                                            ^
: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = $1 AND "votes"."voteable_type" = $2
PG::UndefinedColumn: ERROR:  column votes.voteable_id does not exist
LINE 1: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = ...
                                            ^
: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = $1 AND "votes"."voteable_type" = $2
  [1m[36mVote Load (0.6ms)[0m  [1mSELECT "votes".* FROM "votes"[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mVote Load (0.5ms)[0m  [1mSELECT "votes".* FROM "votes"[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "votes" SET "votable_id" = $1, "votable_type" = $2, "updated_at" = $3 WHERE "votes"."id" = $4  [["votable_id", 1], ["votable_type", "Answer"], ["updated_at", "2015-02-05 23:34:32.076175"], ["id", 2]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "votes" ("user_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["user_id", 1], ["created_at", "2015-02-05 23:36:27.115722"], ["updated_at", "2015-02-05 23:36:27.115722"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  UPDATE "votes" SET "votable_id" = $1, "votable_type" = $2, "updated_at" = $3 WHERE "votes"."id" = $4  [["votable_id", 1], ["votable_type", "Answer"], ["updated_at", "2015-02-05 23:36:27.119315"], ["id", 3]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
  [1m[35mQuestion Load (0.4ms)[0m  SELECT "questions".* FROM "questions"
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"  [["created_at", "2015-02-05 23:38:36.295171"], ["updated_at", "2015-02-05 23:38:36.295171"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
PG::UndefinedColumn: ERROR:  column votes.voteable_id does not exist
LINE 1: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = ...
                                            ^
: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = $1 AND "votes"."voteable_type" = $2
  [1m[36m (115.9ms)[0m  [1mDROP DATABASE IF EXISTS "mac_overflow_development"[0m
  [1m[35m (114.4ms)[0m  DROP DATABASE IF EXISTS "mac_overflow_test"
  [1m[36m (314.0ms)[0m  [1mCREATE DATABASE "mac_overflow_development" ENCODING = 'unicode'[0m
  [1m[35m (250.6ms)[0m  CREATE DATABASE "mac_overflow_test" ENCODING = 'unicode'
  [1m[36mSQL (0.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (5.0ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "content" text, "question_id" integer, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "comments" ("id" serial primary key, "content" text, "commentable_id" integer, "commentable_type" character varying, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (5.3ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "prompt" text, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (5.7ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "email" character varying, "password_digest" character varying, "pic_url" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (3.7ms)[0m  CREATE TABLE "votes" ("id" serial primary key, "votable_id" integer, "user_id" integer, "votable_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (2.1ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.5ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.6ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224809')
  [1m[36m (0.7ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224742')[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224756')
  [1m[36m (0.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224801')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224805')
  [1m[36mSQL (0.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (6.1ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "content" text, "question_id" integer, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (3.2ms)[0m  [1mCREATE TABLE "comments" ("id" serial primary key, "content" text, "commentable_id" integer, "commentable_type" character varying, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (3.0ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "prompt" text, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "email" character varying, "password_digest" character varying, "pic_url" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (3.0ms)[0m  CREATE TABLE "votes" ("id" serial primary key, "votable_id" integer, "user_id" integer, "votable_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (1.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.4ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224809')
  [1m[36m (0.4ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224742')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224756')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224801')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224805')
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"  [["created_at", "2015-02-05 23:43:18.196552"], ["updated_at", "2015-02-05 23:43:18.196552"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
PG::UndefinedColumn: ERROR:  column votes.voteable_id does not exist
LINE 1: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = ...
                                            ^
: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = $1 AND "votes"."voteable_type" = $2
PG::UndefinedColumn: ERROR:  column votes.voteable_id does not exist
LINE 1: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = ...
                                            ^
: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = $1 AND "votes"."voteable_type" = $2
PG::UndefinedColumn: ERROR:  column votes.voteable_id does not exist
LINE 1: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = ...
                                            ^
: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = $1 AND "votes"."voteable_type" = $2
PG::UndefinedColumn: ERROR:  column votes.voteable_id does not exist
LINE 1: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = ...
                                            ^
: SELECT "votes".* FROM "votes" WHERE "votes"."voteable_id" = $1 AND "votes"."voteable_type" = $2
  [1m[36m (116.2ms)[0m  [1mDROP DATABASE IF EXISTS "mac_overflow_development"[0m
  [1m[35m (116.0ms)[0m  DROP DATABASE IF EXISTS "mac_overflow_test"
  [1m[36m (287.7ms)[0m  [1mCREATE DATABASE "mac_overflow_development" ENCODING = 'unicode'[0m
  [1m[35m (241.9ms)[0m  CREATE DATABASE "mac_overflow_test" ENCODING = 'unicode'
  [1m[36mSQL (0.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (5.1ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "content" text, "question_id" integer, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (3.1ms)[0m  [1mCREATE TABLE "comments" ("id" serial primary key, "content" text, "commentable_id" integer, "commentable_type" character varying, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (3.8ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "prompt" text, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (3.8ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "email" character varying, "password_digest" character varying, "pic_url" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (4.0ms)[0m  CREATE TABLE "votes" ("id" serial primary key, "votable_id" integer, "user_id" integer, "votable_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.3ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.5ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224809')
  [1m[36m (0.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224742')[0m
  [1m[35m (0.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224756')
  [1m[36m (0.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224801')[0m
  [1m[35m (0.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224805')
  [1m[36mSQL (0.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (23.3ms)[0m  CREATE TABLE "answers" ("id" serial primary key, "content" text, "question_id" integer, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (6.1ms)[0m  [1mCREATE TABLE "comments" ("id" serial primary key, "content" text, "commentable_id" integer, "commentable_type" character varying, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (5.2ms)[0m  CREATE TABLE "questions" ("id" serial primary key, "prompt" text, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (5.4ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "email" character varying, "password_digest" character varying, "pic_url" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (5.5ms)[0m  CREATE TABLE "votes" ("id" serial primary key, "votable_id" integer, "user_id" integer, "votable_type" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36m (3.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (2.7ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224809')
  [1m[36m (0.7ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224742')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224756')
  [1m[36m (0.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20150205224801')[0m
  [1m[35m (0.6ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20150205224805')
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "questions" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"  [["created_at", "2015-02-05 23:49:46.524616"], ["updated_at", "2015-02-05 23:49:46.524616"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
  [1m[35mVote Load (0.4ms)[0m  SELECT "votes".* FROM "votes" WHERE "votes"."votable_id" = $1 AND "votes"."votable_type" = $2  [["votable_id", 1], ["votable_type", "Question"]]
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "votes" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"  [["created_at", "2015-02-05 23:50:02.062280"], ["updated_at", "2015-02-05 23:50:02.062280"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.3ms)[0m  [1mUPDATE "votes" SET "votable_id" = $1, "votable_type" = $2, "updated_at" = $3 WHERE "votes"."id" = $4[0m  [["votable_id", 1], ["votable_type", "Question"], ["updated_at", "2015-02-05 23:50:02.066249"], ["id", 1]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "answers" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"  [["created_at", "2015-02-05 23:50:28.719391"], ["updated_at", "2015-02-05 23:50:28.719391"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
  [1m[35mVote Load (0.5ms)[0m  SELECT "votes".* FROM "votes" WHERE "votes"."votable_id" = $1 AND "votes"."votable_type" = $2  [["votable_id", 1], ["votable_type", "Answer"]]
  [1m[36mComment Load (0.4ms)[0m  [1mSELECT "comments".* FROM "comments" WHERE "comments"."commentable_id" = $1 AND "comments"."commentable_type" = $2[0m  [["commentable_id", 1], ["commentable_type", "Question"]]
  [1m[35mComment Load (0.5ms)[0m  SELECT "comments".* FROM "comments" WHERE "comments"."commentable_id" = $1 AND "comments"."commentable_type" = $2  [["commentable_id", 1], ["commentable_type", "Answer"]]
  [1m[36m (28.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (17.5ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20150205224742)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (26.3ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "email" character varying, "password_digest" character varying, "pic_url" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (6.7ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224742"]]
  [1m[36m (6.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateQuestions (20150205224756)
  [1m[35m (0.4ms)[0m  BEGIN
  [1m[36m (3.9ms)[0m  [1mCREATE TABLE "questions" ("id" serial primary key, "prompt" text, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224756"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateAnswers (20150205224801)
  [1m[35m (5.9ms)[0m  BEGIN
  [1m[36m (21.3ms)[0m  [1mCREATE TABLE "answers" ("id" serial primary key, "content" text, "question_id" integer, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20150205224801"]]
  [1m[36m (1.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20150205224805)
  [1m[35m (7.0ms)[0m  BEGIN
  [1m[36m (15.5ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "votable_id" integer, "votable_type" character varying, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (1.2ms)[0m  CREATE  INDEX  "index_votes_on_votable_type_and_votable_id" ON "votes"  ("votable_type", "votable_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150205224805"]]
  [1m[35m (0.5ms)[0m  COMMIT
Migrating to CreateComments (20150205224809)
  [1m[36m (12.1ms)[0m  [1mBEGIN[0m
  [1m[35m (13.7ms)[0m  CREATE TABLE "comments" ("id" serial primary key, "content" text, "commentable_id" integer, "commentable_type" character varying, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) 
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150205224809"]]
  [1m[35m (0.4ms)[0m  COMMIT
Migrating to AddTitleToQuestions (20150206004917)
  [1m[36m (11.6ms)[0m  [1mBEGIN[0m
  [1m[35m (12.0ms)[0m  ALTER TABLE "questions" ADD "title" character varying
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20150206004917"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (2.9ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'answers'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (2.1ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'comments'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.1ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.8ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.9ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

